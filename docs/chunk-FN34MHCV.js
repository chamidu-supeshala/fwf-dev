import{A as s,C as i,E as l,R as e,c as f,h as u,i as o,u as p}from"./chunk-AJGGPJRP.js";import{b as m}from"./chunk-3MOYO27G.js";function w(){try{return o.returnOpenHref(`${m.SECURE_SITE_SDK_ORIGIN}/loading`,"popupWindow","width=600,height=800,scrollbars=yes")}catch{throw new Error("Could not open social popup")}}async function h(){i.push("ConnectingFarcaster");let t=l.getAuthConnector();if(t&&!e.getAccountData()?.farcasterUrl)try{let{url:r}=await t.provider.getFarcasterUri();e.setAccountProp("farcasterUrl",r,e.state.activeChain)}catch(r){i.goBack(),p.showError(r)}}async function C(t){i.push("ConnectingSocial");let a=l.getAuthConnector(),r=null;try{let c=setTimeout(()=>{throw new Error("Social login timed out. Please try again.")},45e3);if(a&&t){if(o.isTelegram()||(r=w()),r)e.setAccountProp("socialWindow",f(r),e.state.activeChain);else if(!o.isTelegram())throw new Error("Could not create social popup");let{uri:n}=await a.provider.getSocialRedirectUri({provider:t});if(!n)throw r?.close(),new Error("Could not fetch the social redirect uri");if(r&&(r.location.href=n),o.isTelegram()){u.setTelegramSocialProvider(t);let g=o.formatTelegramSocialLoginUrl(n);o.openHref(g,"_top")}clearTimeout(c)}}catch(c){r?.close();let n=o.parseError(c);p.showError(n),s.sendEvent({type:"track",event:"SOCIAL_LOGIN_ERROR",properties:{provider:t,message:n}})}}async function S(t){e.setAccountProp("socialProvider",t,e.state.activeChain),s.sendEvent({type:"track",event:"SOCIAL_LOGIN_STARTED",properties:{provider:t}}),t==="farcaster"?await h():await C(t)}export{S as a};
