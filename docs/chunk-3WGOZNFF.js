var f=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;function h(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function l(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function p(t,...e){if(!h(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function T(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.createHasher");l(t.outputLen),l(t.blockLen)}function O(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function _(t,e){p(t);let n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}function k(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function I(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function V(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function j(t,e){return t<<32-e|t>>>e}function N(t,e){return t<<e|t>>>32-e>>>0}var b=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function m(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}function A(t){for(let e=0;e<t.length;e++)t[e]=m(t[e]);return t}var D=b?t=>t:A,y=typeof Uint8Array.from([]).toHex=="function"&&typeof Uint8Array.fromHex=="function",L=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function F(t){if(p(t),y)return t.toHex();let e="";for(let n=0;n<t.length;n++)e+=L[t[n]];return e}var c={_0:48,_9:57,A:65,F:70,a:97,f:102};function x(t){if(t>=c._0&&t<=c._9)return t-c._0;if(t>=c.A&&t<=c.F)return t-(c.A-10);if(t>=c.a&&t<=c.f)return t-(c.a-10)}function R(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);if(y)return Uint8Array.fromHex(t);let e=t.length,n=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);let r=new Uint8Array(n);for(let o=0,i=0;o<n;o++,i+=2){let u=x(t.charCodeAt(i)),s=x(t.charCodeAt(i+1));if(u===void 0||s===void 0){let w=t[i]+t[i+1];throw new Error('hex string expected, got non-hex character "'+w+'" at index '+i)}r[o]=u*16+s}return r}function B(t){if(typeof t!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(t))}function H(t){return typeof t=="string"&&(t=B(t)),p(t),t}function C(...t){let e=0;for(let r=0;r<t.length;r++){let o=t[r];p(o),e+=o.length}let n=new Uint8Array(e);for(let r=0,o=0;r<t.length;r++){let i=t[r];n.set(i,o),o+=i.length}return n}var d=class{};function M(t){let e=r=>t().update(H(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function W(t=32){if(f&&typeof f.getRandomValues=="function")return f.getRandomValues(new Uint8Array(t));if(f&&typeof f.randomBytes=="function")return Uint8Array.from(f.randomBytes(t));throw new Error("crypto.getRandomValues must be defined")}var a=BigInt(4294967295),g=BigInt(32);function U(t,e=!1){return e?{h:Number(t&a),l:Number(t>>g&a)}:{h:Number(t>>g&a)|0,l:Number(t&a)|0}}function v(t,e=!1){let n=t.length,r=new Uint32Array(n),o=new Uint32Array(n);for(let i=0;i<n;i++){let{h:u,l:s}=U(t[i],e);[r[i],o[i]]=[u,s]}return[r,o]}var K=(t,e,n)=>t>>>n,q=(t,e,n)=>t<<32-n|e>>>n,z=(t,e,n)=>t>>>n|e<<32-n,G=(t,e,n)=>t<<32-n|e>>>n,J=(t,e,n)=>t<<64-n|e>>>n-32,P=(t,e,n)=>t>>>n-32|e<<64-n;var Q=(t,e,n)=>t<<n|e>>>32-n,Y=(t,e,n)=>e<<n|t>>>32-n,Z=(t,e,n)=>e<<n-32|t>>>64-n,$=(t,e,n)=>t<<n-32|e>>>64-n;function tt(t,e,n,r){let o=(e>>>0)+(r>>>0);return{h:t+n+(o/2**32|0)|0,l:o|0}}var et=(t,e,n)=>(t>>>0)+(e>>>0)+(n>>>0),nt=(t,e,n,r)=>e+n+r+(t/2**32|0)|0,rt=(t,e,n,r)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0),ot=(t,e,n,r,o)=>e+n+r+o+(t/2**32|0)|0,it=(t,e,n,r,o)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0)+(o>>>0),ct=(t,e,n,r,o,i)=>e+n+r+o+i+(t/2**32|0)|0;export{v as a,K as b,q as c,z as d,G as e,J as f,P as g,Q as h,Y as i,Z as j,$ as k,tt as l,et as m,nt as n,rt as o,ot as p,it as q,ct as r,h as s,l as t,p as u,T as v,O as w,_ as x,k as y,I as z,V as A,j as B,N as C,D,F as E,R as F,H as G,C as H,d as I,M as J,W as K};
